import os
import logging
import asyncio
from flask import Flask, request
from telegram import Update
from telegram.ext import Application, CommandHandler

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏ URL webhook
TOKEN = os.getenv("TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
PORT = int(os.getenv("PORT", 10000))

if not TOKEN:
    raise ValueError("‚ùå TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
if not WEBHOOK_URL:
    raise ValueError("‚ùå WEBHOOK_URL –Ω–µ —É–∫–∞–∑–∞–Ω! –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.")

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)
logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞—ë–º Telegram Bot
application = Application.builder().token(TOKEN).build()

async def start(update: Update, context) -> None:
    await update.message.reply_text("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")

application.add_handler(CommandHandler("start", start))

# Flask-—Å–µ—Ä–≤–µ—Ä
app = Flask(__name__)

@app.route("/")
def home():
    return "ü§ñ Bot is running!", 200

@app.route("/webhook", methods=["POST"])
def webhook():
    json_update = request.get_json()
    logger.info(f"üì© –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {json_update}")

    update = Update.de_json(json_update, application.bot)
    asyncio.run(application.process_update(update))  # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ

    return "ok", 200

async def set_webhook():
    """–§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç webhook"""
    await application.bot.set_webhook(WEBHOOK_URL + "/webhook")
    logger.info(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}/webhook")

async def send_startup_message():
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
    chat_ids = [-1002291124169, -1002174956701]
    for chat_id in chat_ids:
        try:
            await application.bot.send_message(chat_id=chat_id, text="üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            logger.info(f"üì§ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É {chat_id}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ {chat_id}: {e}")

async def main():
    await application.initialize()
    await set_webhook()
    await application.start()
    await send_startup_message()  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—ã

if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())  # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
    app.run(host="0.0.0.0", port=PORT, use_reloader=False)  # –ó–∞–ø—É—Å–∫–∞–µ–º Flask
